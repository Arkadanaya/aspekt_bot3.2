from datetime import datetime
import logging
from config.settings import ADMIN_IDS, OPERATOR_CHAT_ID
from models.state import active_requests, active_chats
from config.keyboards import get_client_main_keyboard, get_operator_main_keyboard

logger = logging.getLogger(__name__)


async def notify_operators(context, user):
    try:
        text = (
            f"üõé <b>–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–¥–¥–µ—Ä–∂–∫–∏!</b>\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç: {user.full_name}\n"
            f"üÜî ID: {user.id}\n"
            f"‚è± –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M %d.%m.%Y')}\n\n"
            f"–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É <b>'üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã'</b>"
        )

        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –æ—Ç {user.id}")

        for admin_id in ADMIN_IDS:
            try:
                await context.bot.send_message(
                    chat_id=admin_id,
                    text=text,
                    parse_mode="HTML"
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {str(e)}")

        if OPERATOR_CHAT_ID:
            try:
                await context.bot.send_message(
                    chat_id=OPERATOR_CHAT_ID,
                    text=text,
                    parse_mode="HTML"
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤: {str(e)}")

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ notify_operators: {str(e)}")


async def close_chat(context, user_id):
    operator_id = active_chats.get(user_id)

    if user_id in active_chats:
        del active_chats[user_id]
    if operator_id and operator_id in active_chats:
        del active_chats[operator_id]

    active_requests.pop(user_id, None)

    try:
        await context.bot.send_message(
            chat_id=user_id,
            text="üî¥ –î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!",
            reply_markup=get_client_main_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ {user_id}: {str(e)}")

    try:
        if operator_id:
            await context.bot.send_message(
                chat_id=operator_id,
                text="üî¥ –ß–∞—Ç —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∑–∞–≤–µ—Ä—à—ë–Ω",
                reply_markup=get_operator_main_keyboard()
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ {operator_id}: {str(e)}")

    logger.info(f"–ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: –æ–ø–µ—Ä–∞—Ç–æ—Ä {operator_id} - –∫–ª–∏–µ–Ω—Ç {user_id}")